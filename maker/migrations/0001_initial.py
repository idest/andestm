# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-09-13 00:22
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GeometricData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='data')),
            ],
        ),
        migrations.CreateModel(
            name='Limits',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minlon', models.FloatField()),
                ('minlat', models.FloatField()),
                ('maxlon', models.FloatField()),
                ('maxlat', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='MechanicalInput',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Bs_t', models.FloatField(help_text='Constante de tensión de Byerlee (MPa)', verbose_name='Bs (t)')),
                ('Bs_c', models.FloatField(help_text='Constante de compresión de Byerlee (MPa)', verbose_name='Bs (c)')),
                ('e', models.FloatField(help_text='Strain rate (s⁻¹)', verbose_name='ė')),
                ('R', models.FloatField(help_text='Constante universal de gases (J mol⁻¹ K⁻¹)', verbose_name='R')),
                ('s_max', models.FloatField(help_text='Máximo stress disponible (MPa)', verbose_name='σ max.')),
            ],
        ),
        migrations.CreateModel(
            name='Resolution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geo_delta', models.FloatField()),
                ('z_delta', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='RheologicModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num', models.IntegerField()),
                ('name', models.CharField(max_length=20)),
                ('H', models.FloatField()),
                ('n', models.FloatField()),
                ('A', models.FloatField()),
                ('ref', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='ThermalInput',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('k_z', models.BooleanField(help_text='¿Usar k en función de la profundidad?', verbose_name='k = f(z)')),
                ('H_z', models.BooleanField(help_text='¿Usar H en función de la profundidad?', verbose_name='H = f(z)')),
                ('delta_icd', models.BooleanField(help_text='¿Usar δ igual a profundidad de la ICD?', verbose_name='δ = ICD')),
                ('t_lat', models.BooleanField(help_text='¿Usar t en función de la latitud?', verbose_name='t = f(lat)')),
                ('k_cs', models.FloatField(help_text='Conductividad térmica de la corteza superior (W/mK)', verbose_name='k (c.s.)')),
                ('k_ci', models.FloatField(help_text='Conductividad térmica de la corteza inferior (W/mK)', verbose_name='k (c.i.)')),
                ('k_ml', models.FloatField(help_text='Conductividad térmica del manto litosférico (W/mK)', verbose_name='k (m.l.)')),
                ('H_cs', models.FloatField(help_text='Producción de calor radiogénico en la corteza superior         (W/m³)', verbose_name='H (c.s.)')),
                ('H_ci', models.FloatField(help_text='Producción de calor radiogénico en la corteza inferior         (W/m³)', verbose_name='H (c.i.)')),
                ('H_ml', models.FloatField(help_text='Producción de calor radiogénico en el manto litosférico         (W/m³)', verbose_name='H (m.l.)')),
                ('delta', models.FloatField(help_text='Factor de escala para el decaimiento exponencial de la         producción de calor radiogénico (km)', verbose_name='δ')),
                ('Tp', models.FloatField(help_text='Temperatura potencial del manto astenosférico en la         superficie (ºC)', verbose_name='Tm')),
                ('G', models.FloatField(help_text='Gradiente adiabático (K/m)', verbose_name='G')),
                ('kappa', models.FloatField(help_text='Difusividad térmica (m²/s)', verbose_name='κ')),
                ('V', models.FloatField(help_text='Velocidad de convergencia (m/Ma)', verbose_name='V')),
                ('dip', models.FloatField(help_text='Ángulo de subducción promedio', verbose_name='α')),
                ('b', models.FloatField(help_text='Parametro adimensional', verbose_name='b')),
                ('t', models.FloatField(help_text='Edad de la corteza oceánica subductada en la fosa (Ma)', verbose_name='t')),
                ('D', models.FloatField(help_text='Parámetro que regula el decrecimiento exponencial del        stress de cizalle a lo largo del limite entre placas', verbose_name='D')),
            ],
        ),
        migrations.CreateModel(
            name='TrenchAge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='data')),
            ],
        ),
        migrations.AddField(
            model_name='mechanicalinput',
            name='Ci',
            field=models.ForeignKey(help_text='Modelo reológico para la corteza inferior', on_delete=django.db.models.deletion.CASCADE, related_name='ci', to='maker.RheologicModel', verbose_name='C.I.'),
        ),
        migrations.AddField(
            model_name='mechanicalinput',
            name='Cs',
            field=models.ForeignKey(help_text='Modelo reológico para la corteza superior', on_delete=django.db.models.deletion.CASCADE, related_name='cs', to='maker.RheologicModel', verbose_name='C.S.'),
        ),
        migrations.AddField(
            model_name='mechanicalinput',
            name='Ml',
            field=models.ForeignKey(help_text='Modelo reológico para el manto litosférico', on_delete=django.db.models.deletion.CASCADE, related_name='ml', to='maker.RheologicModel', verbose_name='M.L.'),
        ),
    ]
